[[{"l":"Welcome","p":["Get started with Verus development.","Get the Verus Wallet","Create your own self sovereign Identity.","Create a QR Code, display it to a user, login to your service.","Use Verus VDXF to attach data to a VerusID.","Use a VerusID to launch a token.","Store data on the Verus Chain.","Create unique keys from your namespace, to organise data.","Download Verus node and sync to the testnet.","Create relationships, signatures and data that bind any type of asset to an ID.","Create a VerusID to start your journey with the powerful and easy to use features a VerusID has."]}],[{"l":"Creating an Identity on VerusCoin"},{"l":"Introduction","p":["This guide aims to walk you through the process of creating an identity on the VerusCoin blockchain by registering a name commitment and then registering an ID with that commitment. By following these steps, you'll secure a unique rent-free identity that can be used within the Verus ecosystem for transactions, authentication, and more.","Prerequisites:","Verus CLI is installed on your system.","The VerusCoin testnet is running and fully synchronized.","You have sufficient funds in your wallet to cover transaction fees and any associated costs (more than 100 VRSCTEST coins)."]},{"l":"Overview","p":["Creating an identity on VerusCoin involves two main steps:","Registering a Name Commitment: This step commits your desired identity name to the blockchain in a way that conceals it until you're ready to register, preventing others from front-running or claiming your name.","Registering an Identity: Using the name commitment, you register the actual identity, making it publicly available and usable within the Verus ecosystem."]},{"i":"step-1-register-a-name-commitment","l":"Step 1: Register a Name Commitment"},{"i":"what-is-a-name-commitment","l":"What is a Name Commitment?","p":["A name commitment is a cryptographic commitment to the identity name you intend to register. It ensures privacy and security by hiding the actual name during the commitment phase, protecting it from being claimed by others before you complete the registration."]},{"i":"command-registernamecommitment","l":"Command: registernamecommitment","p":["The registernamecommitment command creates a namecommitment transaction for your desired identity name."]},{"l":"Syntax","p":["name: The unique name to commit to. creating a name commitment is not a registration, and if one is created for a name that exists, it may succeed, but will never be able to be used","controladdress: address that will control this commitment. IMPORTANT: this is not necessarily the address that should control the actual ID, and it should be present in the current wallet that is registering the ID. Change may go to this address.","referralidentity: (optional) friendly name or identity address that is provided as a referral mechanism and to lower network cost of the ID.","parentnameorid: (optional) friendly name or currency i-address, which will be the parent of this ID and dictate issuance rules & pricing.","sourceoffunds: (optional) optional address to use for source of funds. if not specified, transparent wildcard \"*\" is used."]},{"l":"Example","p":["Suppose you want to register the identity name tutorial. Execute the following command:","tutorial: The desired identity name.","RVdPfjLiWRbD7v63Ybhq2AL9FRSgyKsK9N: the controladdress of that namecommitment. You can create an address using the getnewaddress command.",": There is no referral used.","vrsctest: We create an identity using the root currency of the testnet. The result will be the identity ' tutorial.vrsctest@' or ' tutorial@' since its a root id."]},{"l":"Result","p":["Be sure to save the result, as it will be essential to do the next step when finally register the identity. When you for some reason lose that information and the name is still available you have to register another name commitment."]},{"l":"Notes","p":["Transaction Submission: The command will create a transaction with a namecommitment and sends it to the network.","Confirmation: Wait for the transaction to be included in a block (usually after one confirmation) before proceeding to the next step.","Fees: The fees for that transaction will be 0.0001 VRSCTEST Coins.","You can check the confirmations via the command:","When the number of confirmations is 1 or higher you can proceed. When the command returns null. The transaction is not confirmed yet and you have to wait a bit more. The Blocktime on the testnet is supposed to be one minute. Be aware that it sometimes can take a bit longer in the testnet."]},{"i":"step-2-register-the-identity","l":"Step 2: Register the Identity"},{"i":"command-registeridentity","l":"Command: registeridentity","p":["After your name commitment is confirmed on the blockchain, you can register the identity using the registeridentity command."]},{"i":"syntax-1","l":"Syntax","p":["jsonidregistration: An json object that defines the identity registration.","primaryaddresses: An array of addresses associated with the identity.","minimumsignatures: The minimum number of signatures required for identity actions (useful for multi-signature setups).","funding_source: (Optional) The address or alias to fund the transaction."]},{"i":"example-1","l":"Example","p":["For our example with the previous registered namecommitment the object can look like the following.","jsonidregistration:","this is the json object which was minified as string. Take a closer look here. Some values should be already familiar for you. txid and the namereservation object contains values from the response of the registernamecommitment command. The identity object contains information like the primaryaddresses, revocation and recoveryauthority which you can adjust to your needs. When you dont put a recovation and recovery authority your primaryaddress RVdPfjLiWRbD7v63Ybhq2AL9FRSgyKsK9N will be used by default both authorities."]},{"i":"result-1","l":"Result","p":["The result of this command will generate a transaction ID."]},{"i":"notes-1","l":"Notes","p":["Skipped Arguments: for simplicity reasons we skipped returntx, feeoffer and sourceoffunds","Matching Values: Ensure the name and other values matches the values used in the name commitment.","Transaction Fees: The registration will require a fee, deducted from your wallet. On the VRSCTEST a root identity cost 100 VRSCTEST. You can reduce the price to 80 VRSCTEST by using a referral identity. On top of that comes a transactionfee of 0.0001 VRSCTEST","Confirmation: Wait for the identity registration transaction to be confirmed on the blockchain.","As in the previous step you can also check the confirmations via the command:","When the number of confirmations is 1 or higher your identity should be registered. And you can verify your registration."]},{"i":"step-3-verify-your-identity-registration","l":"Step 3: Verify Your Identity Registration","p":["To confirm that your identity has been successfully registered, use the getidentity command."]},{"i":"command-getidentity","l":"Command: getidentity"},{"i":"syntax-2","l":"Syntax","p":["name: name followed by \"@\" or i-address of an identity"]},{"i":"example-2","l":"Example"},{"l":"Expected Output","p":["You should receive detailed information about your identity, such as:","Identity name","Primary addresses","Identity ID","Registration block height","Other associated data","eg.","After registering the identity, some output should appear. To really make sure you own the identity you should take a closer look to the values canspendfor or cansignfor. Both values should be true."]},{"l":"Conclusion","p":["Congratulations! You have successfully created an identity on the VerusCoin blockchain by registering a name commitment and then registering the identity. Your new identity is now part of the Verus ecosystem and can be used for various purposes, including secure transactions and decentralized applications."]},{"l":"Additional Tips","p":["Multi-Signature Identities: If you require enhanced security, consider setting up a multi-signature identity by specifying multiple primaryaddresses and adjusting the minimumsignatures parameter accordingly.","Store Data: You can store data in an identity by using the contentmap or contentmultimap","Updating Identities: You can update your identity's information (e.g., primary addresses) using the updateidentity command."]},{"l":"References","p":["Official VerusCoin Documentation: Visit the VerusCoin GitHub for the latest documentation and updates.","Community Support: Join the VerusCoin community forums or Discord channels for assistance from other users and developers."]},{"l":"Disclaimer","p":["This guide is based on the VerusCoin protocol as of October 2024. Features and commands may change in future versions."]}],[{"l":"Getting Started","p":["Fancy getting started guide..."]}],[{"l":"Developer Documentation Landing Page"},{"l":"VDXF","p":["For the official overview of the Verus Data eXchange Format (VDXF), see the VDXF Overview on the Verus docs website."]},{"l":"Code Samples"}],[{"l":"Getting Started"},{"l":"What you need to know","p":["Understand the Concept - see https://docs.verus.io/vdxf/#implementation","Understand Namespace/IDs? -- see ?","Prerequisites section - installing ts-client?","What is next...?"]},{"l":"Coding Samples","p":["Create part of this Repo to have Samples","Setup instructions for Samples","Need help!"]},{"i":"sample-1-simple-message-encryption","l":"Sample 1: Simple Message Encryption","p":["Need help!"]},{"i":"sample-2-using-vdxf-for-storage-in-an-app","l":"Sample 2: Using VDXF for Storage in an App","p":["The following example demonstrates a simple use case where an application uses the VDXF function to store information.","Clone the /vdxf-sample-app code","What next ...?","CHIPS is an online poker game with information on how VDXF is used to store information about the Tables, Players, and games. It is a useful example for more advanced use cases."]}],[{"l":"Using VDXF Keys","p":["VDXF Keys are an unique iaddress that when found by applications tell the software what to do with the data. e.g. if you have a JSON object like this","Then you might guess that iK7a5JNJnbeuYWVHCDRpJosj3irGJ5Qa8c is a datatype string to be expected.","This is because the qulaified name of the above key is"]},{"l":"More advanced keys","p":["An object that expects many inputs can also be represented with a vdxfid e.g.","From: verus-typescript-primitives","A Datadescriptor is like this:","So you can populate this item as follows"]},{"l":"Code example JS"},{"i":"the-popular-main-keys-used-by-the-daemon-are","l":"The popular main keys used by the Daemon are:"}],[{"l":"VerusID Login Client","p":["The Verus Login Consent Client provides a passwordless login to services using the VerusID avaliable on the Verus Blockchain. For more information on the VerusID checkout the VerusID website.. The library is a TypeScript client designed to utilize VerusID functionality in a lite client, providing functionalities for creating and verifying digital signatures, handling login consents, managing VerusPay invoices, and more, using VerusID's blockchain technology."]},{"l":"Features","p":["VerusID Interface: Main class providing methods to interact with VerusID.","Blockchain Interaction: Functions to get current blockchain height and chain ID.","Message and Hash Signing: Methods to sign messages and hashes with VerusID signatures.","Login Consent Handling: Tools to create, sign, and verify VerusID login consent requests and responses.","VerusPay Invoice Management: Functions to create, sign, and verify VerusPay v3 invoices."]}],[{"l":"Installing verusid-ts-client"},{"l":"Prerequisites","p":["The verusid-ts-client is installed using yarn CLI.","Package Manager","Supported Platforms","yarn"]},{"l":"Install","p":["To install the verusid-ts-client in your javascript project run"]},{"l":"Usage"},{"l":"Initializing the VerusID Interface","p":["This will allow the verusid-ts-client to connect to the verus blockchain. You can connect it directly to a node that you host or to web hosted API endpoint e.g. https://api.verus.services"]}],[{"l":"QR Code Generation"},{"l":"Creating a login QR from a Server","p":["To turn this login challenge to a Deeplink that can be put into a QR code or a link that can be clicked."]}],[{"l":"Handling the QR code"},{"l":"How to sign the QR code to login","p":["The mobile app or other app that recieves the Deeplink checks the valididty of the challenge, it also carefully displays to the user anti-phishing information to allow the user to verify then trust that the Challeng is coming from a legitemate service.","To turn this login challenge to a Deeplink that can be put into a QR code or a link that can be clicked."]}],[{"l":"Processing a signed Login Challenge","p":["Once you receive back a signed challenge from a user then you can process their challenge in the same way i.e. checking the signature they have signed the Response with is valid with the Identities current authorities via the Verus blockchain. Then your system can decide whether they are a valid user, or new user etc.."]}],[{"l":"Developer Documentation Landing Page","p":["Nice developer documentation starting page.."]}],[{"l":"Getting Started","p":["Attestations on Verus are very easy as all the signing and creation of the objects is handled by the daemon. The daemon understands how to make a data structure that combines all the values you wish to include in the attestation and put it into a MMR that can be zero knowledge, encyrpted, signed and stored. Here is an example of a simple proo that could be created for a user."]},{"l":"Code example JS","p":["To create a signed object we can use the Daemon to take in the values of the attestation then sign them, so the object must contain all the information that links the signed object to the user. So e.g. it can contain","The users ID","The users information being attested to","The attestors information document type, data","This information will all be put into a MMR and signed.","So for example this attests a users ID to an attestation ID. So in words the system will sign the data to be true that the user in the myapp.vrsc::attestation.user key has the attestataion of myapp.vrsc::attestation.id ID.","This will return:"]},{"l":"Storing the data in an ID","p":["Get a vdxfid for the main object to be stored in the ID"]}],[{"l":"Developer Documentation Landing Page","p":["Nice developer documentation starting page.."]}],[{"l":"Getting Started","p":["Fancy getting started guide..."]}],[{"l":"Developer Documentation Landing Page","p":["Nice developer documentation starting page.."]}],[{"l":"Getting Started","p":["Fancy getting started guide..."]}],[{"l":"Developer Documentation Landing Page","p":["Nice developer documentation starting page.."]}],[{"l":"Getting Started","p":["Fancy getting started guide..."]}],[{"l":"Developer Documentation Landing Page","p":["Nice developer documentation starting page.."]}],[{"l":"Getting Started","p":["Fancy getting started guide..."]}],[{"l":"Feedback","p":["Please use this page to raise issues, put changelogs for each section of the site."]},{"l":"VerusID","p":["TBA - Create initial guide"]},{"l":"Verus VDXF","p":["TBA - Create initial guide"]},{"l":"Verus Login","p":["2024/03/11 - Created","2024/03/11 - Initial Release","TBA - Community to test code, validate guides, give feedback."]},{"l":"Attestations","p":["TBA - Create initial guide"]},{"l":"Creating Currencies","p":["TBA - Create initial guide"]},{"l":"Verus Chain Storage","p":["TBA - Create initial guide"]},{"l":"Verus NFTs","p":["TBA - Create initial guide"]},{"l":"Verus Testnet","p":["TBA - Create initial guide"]},{"l":"Bounty Section","p":["2024/03/16 - Created Section.","2024/03/16 - Added Solana bounty."]}],[{"l":"dApps requested by the Community"},{"l":"Explorer to show all currencies","p":["TBA - Create initial guide"]},{"i":"z-transaction-memo---messaging-service","l":"Z Transaction memo - messaging service","p":["TBA - Create initial guide"]},{"l":"Decentralized profile viewer","p":["TBA - Create initial guide"]},{"l":"Storage dropbox using chain storage","p":["TBA - Create initial guide"]},{"l":"Attestation wrapper GUI","p":["TBA - Create initial guide"]},{"l":"GUI Currency Creator Visulizer","p":["TBA - Create initial guide"]},{"l":"Twitter style App","p":["TBA - Create initial guide"]}],[{"l":"Community Bounties","p":["Please note that the bounties listed on this website are community-generated and are not affiliated with monkins1010.github.io. This is merely a collection of the open bounties. Please seek the bounty provider the fulfillment of any listed bounties. Users engaging with these bounties do so at their own discretion and risk."]}],[{"i":"#","p":["by"]},{"l":"Project synopsis","p":[": 1. Rust RPC Server","1.1 Handle API calls from the Verus Daemon","1.2 Serialize and deserialize data","1.3 Interact with Solana smart contract endpoints","1.4 Host a wallet to pay for Solana state change transactions","1.5 Solana utility functions for Notarizers","2. Solana Smart Contracts","3. Daemon modification to accept Solana Proofs","4. Website so interact with Smart contract","5. Mobile app to interact with Solana and Verus"]},{"l":"Resources"},{"l":"People Attempting Bounty","p":["@........."]},{"l":"Milestones","p":["Define What needs to be built","In the Daemon (How to solve the EDCSA Issue)","Define and choose programming language to be used for each module","Smart Contracts","Apps","Create serializing libraries","Create RPC API for DAemon to connect to"]}],[{"i":"#","p":["by"]},{"l":"Project synopsis","p":["To help contribute to the developer doucmentation so that people can build on verus using the Daemon, Javascript libraries, Verus.io website and Wiki. ALso know how to interact with the tools in the wallet and bridge websites.","1. VerusID","2. Verus VDXF","3. Verus Login","4. Attestations","5. Creating Currencies","6. Verus Chain Storage","7. Verus NFTs","8. Verus Testnet"]},{"l":"People Attempting Bounty","p":["@........."]},{"l":"Milestones","p":["...."]}],[{"i":"#","p":["by"]},{"l":"Project synopsis","p":["To help contribute to the developer doucmentation so that people can build on verus using the Daemon, Javascript libraries, Verus.io website and Wiki. ALso know how to interact with the tools in the wallet and bridge websites.","1. VerusID","2. Verus VDXF","3. Verus Login","4. Attestations","5. Creating Currencies","6. Verus Chain Storage","7. Verus NFTs","8. Verus Testnet"]},{"l":"People Attempting Bounty","p":["@........."]},{"l":"Milestones","p":["...."]}],[{"l":"Defi and coin aggregator platforms progress","p":["Verus's Volume is reported in the $1,000s per day, but looking at https://cryptodashboard.faldt.net/ we can see its up in the Millions of $.","Below is a status of current efforts to change this and the places approached.","Name","Progress","Todo","User","CoinMarketCap","Need a company to represent","TBA","CoinGeko","Approached in talks"]}]]